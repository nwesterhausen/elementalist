name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}     
    - name: Build
      run: cargo build --verbose
  clippy:
    name: Clippy Check
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
    - uses: nwesterhausen/clippy-check@v1
      name: Clippy
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allow: >
            nonstandard_macro_braces
            mutex_atomic
          deny: warnings  
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}      
    - name: Run tests
      run: cargo test --verbose
